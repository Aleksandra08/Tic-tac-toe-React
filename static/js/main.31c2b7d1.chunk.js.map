{"version":3,"sources":["Cell.js","Board.js","Game.js","index.js"],"names":["Cell","props","value","onDivClicked","react_default","a","createElement","className","onClick","Board","_this$props","this","cells","onCellClicked","map","cell","index","src_Cell","key","renderCells","React","Component","getWinner","_winLines$filter","filter","combo","_combo","Object","slicedToArray","b","c","winCombo","Game","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleClick","_this$state","state","whoNext","stepCounter","winner","toConsumableArray","setState","resetGame","Array","fill","gameStatus","_this$state2","concat","src_Board","ReactDOM","render","src_Game","document","getElementById"],"mappings":"2QAYeA,MAVf,SAAcC,GAAO,IACVC,EAAuBD,EAAvBC,MAAOC,EAAgBF,EAAhBE,aACd,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,QAASL,GAChCD,ICyBEO,wLA1BG,IAAAC,EACqBC,KAAKV,MAA7BW,EADGF,EACHE,MAAOC,EADJH,EACIG,cACd,OAAOD,EAAME,IAAI,SAACC,EAAMC,GACpB,OACIZ,EAAAC,EAAAC,cAACW,EAAD,CACIf,MAAOa,EACPG,IAAK,QAAQF,EACbb,aAAc,WAAOU,EAAcG,yCAO/C,OACIZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAEPI,KAAKQ,sBAnBLC,IAAMC,iBC+D1B,SAASC,EAAUV,GACf,IADsBW,EACL,CACb,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEiBC,OAAO,SAAAC,GAAS,IAAAC,EAAAC,OAAAC,EAAA,EAAAD,CACxBF,EADwB,GACnCpB,EADmCqB,EAAA,GAChCG,EADgCH,EAAA,GAC7BI,EAD6BJ,EAAA,GAExC,OAAOd,EAAMP,IAAMO,EAAMP,KAAOO,EAAMiB,IAAMjB,EAAMiB,KAAOjB,EAAMkB,KAF5DC,EAXeJ,OAAAC,EAAA,EAAAD,CAAAJ,EAAA,MAgBtB,OAAIQ,EACOnB,EAAMmB,EAAS,IAEf,KAMAC,kBAtFX,SAAAA,IAAc,IAAAC,EAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAhB,KAAAqB,IACVC,EAAAN,OAAAQ,EAAA,EAAAR,CAAAhB,KAAAgB,OAAAS,EAAA,EAAAT,CAAAK,GAAAK,KAAA1B,QAUJ2B,YAAc,SAACtB,GAAU,IAAAuB,EACuBN,EAAKO,MAA5C5B,EADgB2B,EAChB3B,MAAO6B,EADSF,EACTE,QAASC,EADAH,EACAG,YAAaC,EADbJ,EACaI,QAClC/B,EAAKe,OAAAiB,EAAA,EAAAjB,CAAOf,IACFI,IAAU2B,IAGpB/B,EAAMI,GAASyB,EACfnB,EAAUV,GACV6B,EAAsB,MAAZA,EAAkB,IAAM,IAClCC,GAA4B,EAC5BC,EAASrB,EAAUV,GAEnBqB,EAAKY,SAAS,CACVjC,QACA6B,UACAC,cACAC,aA3BMV,EA+Bda,UAAY,WACRb,EAAKY,SAAS,CACVjC,MAAOmC,MAAM,GAAGC,KAAK,MACrBN,YAAa,EACbD,QAAS,IACTE,OAAQ,QAjCZV,EAAKO,MAAQ,CACT5B,MAAOmC,MAAM,GAAGC,KAAK,MACrBN,YAAa,EACbD,QAAS,IACTE,OAAQ,MAPFV,wEAwCL,IAEDgB,EAFCC,EACyCvC,KAAK6B,MAA5C5B,EADFsC,EACEtC,MAAO6B,EADTS,EACST,QAASE,EADlBO,EACkBP,OAAQD,EAD1BQ,EAC0BR,YAS/B,OANIO,EADAN,EACU,UAAAQ,OAAaR,EAAb,UACa,IAAhBD,EACM,gBAEH,UAAAS,OAAaV,EAAb,iBAGVrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,iCAAyBoC,EAAzB,KACAtC,EAAAC,EAAAC,cAAA,cAAM2C,GACN7C,EAAAC,EAAAC,cAAA,UAAQE,QAASG,KAAKmC,WAAtB,UACA1C,EAAAC,EAAAC,cAAC8C,EAAD,CAAOxC,MAAOA,EAAOC,cAAeF,KAAK2B,sBAxDtClB,IAAMC,WCCzBgC,IAASC,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAAUC,SAASC,eAAe","file":"static/js/main.31c2b7d1.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Cell(props) {\n    const {value, onDivClicked} = props;\n    return (\n        <div className='board-cell' onClick={onDivClicked}>\n            {value}\n        </div>\n    )\n}\n\n\nexport default Cell;","import React from 'react';\nimport Cell from './Cell';\n\nclass Board extends React.Component {\n\n    renderCells() {\n        const {cells, onCellClicked} = this.props;\n        return cells.map((cell, index) => {\n            return (\n                <Cell\n                    value={cell}\n                    key={'cell-'+index}\n                    onDivClicked={()=> { onCellClicked(index) }}\n                />\n            )\n        })\n    }\n\n    render() {\n        return (\n            <div className='board'>\n                {\n                    this.renderCells()\n                }\n            </div>\n        )\n    }\n\n}\n\nexport default Board;","import React from 'react';\nimport Board from './Board';\nimport './App.css';\n\nclass Game extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            cells: Array(9).fill(null),\n            stepCounter: 0,\n            whoNext: 'X',\n            winner: null\n        }\n    }\n\n    handleClick = (index) => {\n        let {cells, whoNext, stepCounter, winner} = this.state;\n        cells = [...cells];\n        if (cells[index] || winner) {\n            return;\n        }\n        cells[index] = whoNext;\n        getWinner(cells);\n        whoNext = whoNext === \"X\" ? 'O' : \"X\";\n        stepCounter = stepCounter + 1;\n        winner = getWinner(cells);\n\n        this.setState({\n            cells,\n            whoNext,\n            stepCounter,\n            winner\n        })\n    }\n\n    resetGame = () => {\n        this.setState({\n            cells: Array(9).fill(null),\n            stepCounter: 0,\n            whoNext: 'X',\n            winner: null\n        })\n    }\n\n    render() {\n        const {cells, whoNext, winner, stepCounter} = this.state;\n        let gameStatus;\n        if (winner) {\n            gameStatus = `Player ${winner} wins!`;\n        } else if (stepCounter === 9) {\n            gameStatus = 'It is a DRAW!'\n        } else {\n            gameStatus = `Player ${whoNext}, your turn! `\n        }\n        return (\n            <div className=\"Game\">\n                <h1> Tic Tac Toe, step: {stepCounter} </h1>\n                <h3> {gameStatus}</h3>\n                <button onClick={this.resetGame}> Reset</button>\n                <Board cells={cells} onCellClicked={this.handleClick}/>\n            </div>\n        );\n    }\n}\n\nfunction getWinner(cells) {\n    const winLines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6]\n    ];\n    const [winCombo] = winLines.filter(combo => {\n        let [a, b, c] = combo;\n        return cells[a] && cells[a] === cells[b] && cells[b] === cells[c];\n    });\n\n    if (winCombo) {\n        return cells[winCombo[0]];\n    } else {\n        return null;\n    }\n\n}\n\nexport default Game;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}